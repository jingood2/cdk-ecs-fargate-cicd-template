// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Resources": Object {
    "CdkEcsFargateCicdLB6A0F1E07": Object {
      "DependsOn": Array [
        "TestVpcpublicSubnet1DefaultRoute5A98368D",
        "TestVpcpublicSubnet2DefaultRouteBF011106",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "CdkEcsFargateCicdLBSecurityGroupC485B882",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "TestVpcpublicSubnet1Subnet4F70BC85",
          },
          Object {
            "Ref": "TestVpcpublicSubnet2Subnet96FF72E6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "CdkEcsFargateCicdLBRedirect80To443C4DB3211": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "RedirectConfig": Object {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "CdkEcsFargateCicdLB6A0F1E07",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "CdkEcsFargateCicdLBSecurityGroupC485B882": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB testStackCdkEcsFargateCicdLB49C23138",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CdkEcsFargateCicdLBSecurityGrouptotestStackCdkEcsFargateCicddemoecsserviceSecurityGroup81A75D4980801E28275A": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicddemoecsserviceSecurityGroupF0E686EB",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicdLBSecurityGroupC485B882",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "CdkEcsFargateCicdLBhttpsF5B12614": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": "arn:aws:acm:ap-northeast-2:074732449166:certificate/a3bb34ef-d314-4ab9-a1b0-0351c19439f1",
          },
        ],
        "DefaultActions": Array [
          Object {
            "FixedResponseConfig": Object {
              "ContentType": "text/plain",
              "MessageBody": "Page not found",
              "StatusCode": "404",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "CdkEcsFargateCicdLB6A0F1E07",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "CdkEcsFargateCicdLBhttpsdemotargetgroupGroupC720882F": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 60,
        "HealthCheckPath": "/health",
        "Name": "demo-targetgroup",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "CdkEcsFargateCicdLBhttpsdemotargetgroupRuleAD3EC0E2": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "CdkEcsFargateCicdLBhttpsdemotargetgroupGroupC720882F",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "path-pattern",
            "PathPatternConfig": Object {
              "Values": Array [
                "/*",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "CdkEcsFargateCicdLBhttpsF5B12614",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "CdkEcsFargateCicddemoCodeBuildPloject0616EAE1": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Modes": Array [
            "LOCAL_DOCKER_LAYER_CACHE",
          ],
          "Type": "LOCAL",
        },
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "REPOSITORY_URI",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "CdkEcsFargateCicddemoecrrepo08B6A043",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    ".dkr.ecr.",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "CdkEcsFargateCicddemoecrrepo08B6A043",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    ".",
                    Object {
                      "Ref": "AWS::URLSuffix",
                    },
                    "/",
                    Object {
                      "Ref": "CdkEcsFargateCicddemoecrrepo08B6A043",
                    },
                  ],
                ],
              },
            },
            Object {
              "Name": "CONTAINER_NAME",
              "Type": "PLAINTEXT",
              "Value": "demo",
            },
          ],
          "Image": "aws/codebuild/standard:4.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicddemoCodeBuildPlojectRole2C24B46A",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"pre_build\\": {
      \\"commands\\": [
        \\"aws --version\\",
        \\"$(aws ecr get-login --region \${AWS_DEFAULT_REGION} --no-include-email |  sed 's|https://||')\\",
        \\"COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\\",
        \\"IMAGE_TAG=\${COMMIT_HASH:=latest}\\",
        \\"echo $IMAGE_TAG\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"docker build -t $REPOSITORY_URI:latest .\\",
        \\"docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\\"
      ]
    },
    \\"post_build\\": {
      \\"commands\\": [
        \\"echo Build completed on \`date\`\\",
        \\"echo Pushing the Docker images...\\",
        \\"docker push $REPOSITORY_URI:latest\\",
        \\"docker push $REPOSITORY_URI:$IMAGE_TAG\\",
        \\"echo Writing image definitions file...\\",
        \\"printf \\\\\\"[{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\${CONTAINER_NAME}\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"imageUri\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\${REPOSITORY_URI}:latest\\\\\\\\\\\\\\"}]\\\\\\" > imagedefinitions.json\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"files\\": [
      \\"imagedefinitions.json\\"
    ]
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CdkEcsFargateCicddemoCodeBuildPlojectRole2C24B46A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkEcsFargateCicddemoCodeBuildPlojectRoleDefaultPolicy21FDB412": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-northeast-2:074732449166:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CdkEcsFargateCicddemoCodeBuildPloject0616EAE1",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-northeast-2:074732449166:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CdkEcsFargateCicddemoCodeBuildPloject0616EAE1",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:ap-northeast-2:074732449166:report-group/",
                    Object {
                      "Ref": "CdkEcsFargateCicddemoCodeBuildPloject0616EAE1",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemoecrrepo08B6A043",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemoecrrepo08B6A043",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkEcsFargateCicddemoCodeBuildPlojectRoleDefaultPolicy21FDB412",
        "Roles": Array [
          Object {
            "Ref": "CdkEcsFargateCicddemoCodeBuildPlojectRole2C24B46A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CdkEcsFargateCicddemobuildCodePipelineA0F4DBE6": Object {
      "DependsOn": Array [
        "CdkEcsFargateCicddemobuildCodePipelineRoleDefaultPolicy03334B0D",
        "CdkEcsFargateCicddemobuildCodePipelineRole932449ED",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "EncryptionKey": Object {
            "Id": Object {
              "Fn::GetAtt": Array [
                "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": Object {
            "Ref": "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7",
          },
          "Type": "S3",
        },
        "Name": "demo-ci-ecr-pipeline",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicddemobuildCodePipelineRole932449ED",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": Object {
                  "Branch": "master",
                  "OAuthToken": "{{resolve:secretsmanager:devrock/github/token:SecretString:::}}",
                  "Owner": "jingood2",
                  "PollForSourceChanges": false,
                  "Repo": "demo-app",
                },
                "Name": "Github_Source",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Github_Source",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "CdkEcsFargateCicddemoCodeBuildPloject0616EAE1",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Github_Source",
                  },
                ],
                "Name": "Build_DockerImage_ECR",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Build_Build_DockerImage_ECR",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineBuildBuildDockerImageECRCodePipelineActionRoleA5752434",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Name": "Approve",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineApprovalApproveCodePipelineActionRoleAB54941C",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Approval",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "ECS",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ClusterName": Object {
                    "Ref": "CdkEcsFargateCicdecscluster31B43C94",
                  },
                  "ServiceName": Object {
                    "Fn::GetAtt": Array [
                      "CdkEcsFargateCicddemoecsserviceService13AFB296",
                      "Name",
                    ],
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Build_Build_DockerImage_ECR",
                  },
                ],
                "Name": "DeployAction",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineDeploytoECSDeployActionCodePipelineActionRole79A9DB6C",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "DeploytoECS",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CdkEcsFargateCicddemobuildCodePipelineApprovalApproveCodePipelineActionRoleAB54941C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::074732449166:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::074732449166:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineRole932449ED",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemoCodeBuildPlojectRole2C24B46A",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemoCodeBuildPlojectRole2C24B46A",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineDeploytoECSDeployActionCodePipelineActionRole79A9DB6C",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKeyAlias136B98DD": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AliasName": "alias/codepipeline-teststackcdkecsfargatecicddemobuildcodepipeline856a03a3",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
      "UpdateReplacePolicy": "Delete",
    },
    "CdkEcsFargateCicddemobuildCodePipelineBuildBuildDockerImageECRCodePipelineActionRoleA5752434": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::074732449166:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkEcsFargateCicddemobuildCodePipelineBuildBuildDockerImageECRCodePipelineActionRoleDefaultPolicy91B77927": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemoCodeBuildPloject0616EAE1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkEcsFargateCicddemobuildCodePipelineBuildBuildDockerImageECRCodePipelineActionRoleDefaultPolicy91B77927",
        "Roles": Array [
          Object {
            "Ref": "CdkEcsFargateCicddemobuildCodePipelineBuildBuildDockerImageECRCodePipelineActionRoleA5752434",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CdkEcsFargateCicddemobuildCodePipelineDeploytoECSDeployActionCodePipelineActionRole79A9DB6C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::074732449166:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkEcsFargateCicddemobuildCodePipelineDeploytoECSDeployActionCodePipelineActionRoleDefaultPolicyE6C0B9E3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:ListTasks",
                "ecs:RegisterTaskDefinition",
                "ecs:UpdateService",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Condition": Object {
                "StringEqualsIfExists": Object {
                  "iam:PassedToService": Array [
                    "ec2.amazonaws.com",
                    "ecs-tasks.amazonaws.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkEcsFargateCicddemobuildCodePipelineDeploytoECSDeployActionCodePipelineActionRoleDefaultPolicyE6C0B9E3",
        "Roles": Array [
          Object {
            "Ref": "CdkEcsFargateCicddemobuildCodePipelineDeploytoECSDeployActionCodePipelineActionRole79A9DB6C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CdkEcsFargateCicddemobuildCodePipelineRole932449ED": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkEcsFargateCicddemobuildCodePipelineRoleDefaultPolicy03334B0D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucket90D728E7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemobuildCodePipelineArtifactsBucketEncryptionKey1BE6956B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemobuildCodePipelineBuildBuildDockerImageECRCodePipelineActionRoleA5752434",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemobuildCodePipelineApprovalApproveCodePipelineActionRoleAB54941C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemobuildCodePipelineDeploytoECSDeployActionCodePipelineActionRole79A9DB6C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkEcsFargateCicddemobuildCodePipelineRoleDefaultPolicy03334B0D",
        "Roles": Array [
          Object {
            "Ref": "CdkEcsFargateCicddemobuildCodePipelineRole932449ED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CdkEcsFargateCicddemobuildCodePipelineSourceGithubSourceWebhookResource6791EB84": Object {
      "Properties": Object {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": Object {
          "SecretToken": "{{resolve:secretsmanager:devrock/github/token:SecretString:::}}",
        },
        "Filters": Array [
          Object {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "Github_Source",
        "TargetPipeline": Object {
          "Ref": "CdkEcsFargateCicddemobuildCodePipelineA0F4DBE6",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "CdkEcsFargateCicddemoecrrepo08B6A043": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RepositoryName": "demo-ecr-repo",
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "CdkEcsFargateCicddemoecsserviceSecurityGroupF0E686EB": Object {
      "Properties": Object {
        "GroupDescription": "testStack/CdkEcsFargateCicd/demo-ecs-service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CdkEcsFargateCicddemoecsserviceSecurityGroupfromtestStackCdkEcsFargateCicdLBSecurityGroup36A3BB6F8080C70423B2": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicddemoecsserviceSecurityGroupF0E686EB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicdLBSecurityGroupC485B882",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CdkEcsFargateCicddemoecsserviceService13AFB296": Object {
      "DependsOn": Array [
        "CdkEcsFargateCicdLBhttpsdemotargetgroupRuleAD3EC0E2",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "CdkEcsFargateCicdecscluster31B43C94",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "demo",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "CdkEcsFargateCicdLBhttpsdemotargetgroupGroupC720882F",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemoecsserviceSecurityGroupF0E686EB",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "TestVpcprivateSubnet1Subnet6E9D0483",
              },
              Object {
                "Ref": "TestVpcprivateSubnet2SubnetB8BE3628",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "CdkEcsFargateCicddemofargatetaskdef2C54CE6D",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "CdkEcsFargateCicddemoecsserviceTaskCountTargetCC09F51F": Object {
      "Properties": Object {
        "MaxCapacity": 2,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "CdkEcsFargateCicdecscluster31B43C94",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemoecsserviceService13AFB296",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::074732449166:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "CdkEcsFargateCicddemoecsserviceTaskCountTargetCPUUtilizationScaleInOut1C44F7DB": Object {
      "Properties": Object {
        "PolicyName": "testStackCdkEcsFargateCicddemoecsserviceTaskCountTargetCPUUtilizationScaleInOut5D5DD4CA",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "CdkEcsFargateCicddemoecsserviceTaskCountTargetCC09F51F",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 360,
          "ScaleOutCooldown": 60,
          "TargetValue": 20,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "CdkEcsFargateCicddemofargatetaskdef2C54CE6D": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Cpu": 256,
            "EnvironmentFiles": Array [],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "074732449166.dkr.ecr.ap-northeast-2.",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:a4d0dfe1f748fa08918d1c22b5d548b108b5d58b3d6378d217ae0095256a69e3",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "CdkEcsFargateCicddemofargatetaskdefdemoContainerLogGroupBA1A1AB8",
                },
                "awslogs-region": "ap-northeast-2",
                "awslogs-stream-prefix": "ecs-logs",
              },
            },
            "Memory": 512,
            "Name": "demo",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicddemofargatetaskdefExecutionRole126AF043",
            "Arn",
          ],
        },
        "Family": "testStackCdkEcsFargateCicddemofargatetaskdef1D75F911",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "CdkEcsFargateCicdecstaskexecutionrole61F20554",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CdkEcsFargateCicddemofargatetaskdefExecutionRole126AF043": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkEcsFargateCicddemofargatetaskdefExecutionRoleDefaultPolicy1C779AE4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-2:074732449166:repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkEcsFargateCicddemofargatetaskdefdemoContainerLogGroupBA1A1AB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkEcsFargateCicddemofargatetaskdefExecutionRoleDefaultPolicy1C779AE4",
        "Roles": Array [
          Object {
            "Ref": "CdkEcsFargateCicddemofargatetaskdefExecutionRole126AF043",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CdkEcsFargateCicddemofargatetaskdefdemoContainerLogGroupBA1A1AB8": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CdkEcsFargateCicdecscluster31B43C94": Object {
      "Properties": Object {
        "ClusterName": "ecs-cluster",
      },
      "Type": "AWS::ECS::Cluster",
    },
    "CdkEcsFargateCicdecstaskexecutionrole61F20554": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "ecs-task-exection-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "TestVpcE77CE678": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "TestVpcIGW9DD53F70": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "TestVpcNatRole7167FB5B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestVpcNatSecurityGroupB26ED7D7": Object {
      "Properties": Object {
        "GroupDescription": "Security Group for NAT instances",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL TRAFFIC",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TestVpcVPCGWF1827B84": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "TestVpcIGW9DD53F70",
        },
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "TestVpcprivateSubnet1DefaultRouteE55BA5B9": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": Object {
          "Ref": "TestVpcpublicSubnet1NatInstance78263CC4",
        },
        "RouteTableId": Object {
          "Ref": "TestVpcprivateSubnet1RouteTableF370C70F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVpcprivateSubnet1RouteTableAssociationD9192E40": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVpcprivateSubnet1RouteTableF370C70F",
        },
        "SubnetId": Object {
          "Ref": "TestVpcprivateSubnet1Subnet6E9D0483",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVpcprivateSubnet1RouteTableF370C70F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVpcprivateSubnet1Subnet6E9D0483": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.8.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVpcprivateSubnet2DefaultRoute4E717BCF": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": Object {
          "Ref": "TestVpcpublicSubnet1NatInstance78263CC4",
        },
        "RouteTableId": Object {
          "Ref": "TestVpcprivateSubnet2RouteTable43EBB202",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVpcprivateSubnet2RouteTable43EBB202": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVpcprivateSubnet2RouteTableAssociation6E00A0A0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVpcprivateSubnet2RouteTable43EBB202",
        },
        "SubnetId": Object {
          "Ref": "TestVpcprivateSubnet2SubnetB8BE3628",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVpcprivateSubnet2SubnetB8BE3628": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.16.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVpcpublicSubnet1DefaultRoute5A98368D": Object {
      "DependsOn": Array [
        "TestVpcVPCGWF1827B84",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "TestVpcIGW9DD53F70",
        },
        "RouteTableId": Object {
          "Ref": "TestVpcpublicSubnet1RouteTableD55D3AC3",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVpcpublicSubnet1NatInstance78263CC4": Object {
      "DependsOn": Array [
        "TestVpcNatRole7167FB5B",
      ],
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": Object {
          "Ref": "TestVpcpublicSubnet1NatInstanceInstanceProfile9C1A0947",
        },
        "ImageId": "ami-1234",
        "InstanceType": "t3.small",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "TestVpcNatSecurityGroupB26ED7D7",
              "GroupId",
            ],
          },
        ],
        "SourceDestCheck": false,
        "SubnetId": Object {
          "Ref": "TestVpcpublicSubnet1Subnet4F70BC85",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/publicSubnet1/NatInstance",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "TestVpcpublicSubnet1NatInstanceInstanceProfile9C1A0947": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "TestVpcNatRole7167FB5B",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "TestVpcpublicSubnet1RouteTableAssociationEA0572FC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVpcpublicSubnet1RouteTableD55D3AC3",
        },
        "SubnetId": Object {
          "Ref": "TestVpcpublicSubnet1Subnet4F70BC85",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVpcpublicSubnet1RouteTableD55D3AC3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVpcpublicSubnet1Subnet4F70BC85": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVpcpublicSubnet2DefaultRouteBF011106": Object {
      "DependsOn": Array [
        "TestVpcVPCGWF1827B84",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "TestVpcIGW9DD53F70",
        },
        "RouteTableId": Object {
          "Ref": "TestVpcpublicSubnet2RouteTable19CD621C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVpcpublicSubnet2RouteTable19CD621C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVpcpublicSubnet2RouteTableAssociation8BC8AAA7": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVpcpublicSubnet2RouteTable19CD621C",
        },
        "SubnetId": Object {
          "Ref": "TestVpcpublicSubnet2Subnet96FF72E6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVpcpublicSubnet2Subnet96FF72E6": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "testStack/TestVpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVpcE77CE678",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
}
`;
